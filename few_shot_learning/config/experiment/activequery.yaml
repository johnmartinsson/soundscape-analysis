
set:
  features: false
  train: true
  eval: true
  device: cuda

#TODO fix root path stuff, check dcase, assumes data to be in repo in that casse ofc.
#unless over written
path:
  #root: /home/willbo/data/dcase
  #root: C:\Users\martin\Documents\playground
  data_train: /home/willbo/data/dcase/train
  #data_train: C:\Users\martin\Documents\playground\data\train
  data_test: /home/willbo/data/dcase/test
  #data_test: C:\Users\martin\Documents\playground\data\test
  data_val: /home/willbo/data/dcase/val
  train_w: /home/willbo/data/dcase/hfiles/train
  #train_w: C:\Users\martin\Documents\playground\data\hfiles\train
  test_w: /home/willbo/data/dcase/hfiles/test
  #test_w: C:\Users\martin\Documents\playground\data\hfiles\test
  val_w: /home/willbo/data/dcase/hfiles/val
  #FIX THESE, we need to save models differently
  best_model: best_model.pth
  #best_model: C:\Users\martin\Documents\playground\data\models\best_model.pth
  last_model: last_model.pth
  #last_model: C:\Users\martin\Documents\playground\data\models\last_model.pth
  
  #This is ugly, fix this some time.
  val_OG: /home/willbo/data/dcase/Validation_Set
  test_OG: /home/willbo/data/dcase/Test_Set

dataset:
  script_path: ${root_path}/datasets/dcase_few_shot_bioacoustic.py

model:
  script_path: ${root_path}/models/prototypical.py

optimizer:
  script_path: ${root_path}/optimizers/adam.py

loss_function:
  script_path: ${root_path}/loss_functions/prototypicalloss.py

features:
  raw: false
  raw_pad: 123.456
  seg_len: 0.200
  hop_seg: 0.050
  eps: 2.220446049250313e-16
  fmax: 11025
  fmin: 50
  sr: 22050
  n_fft: 1024
  n_mels: 128
  hop_mel: 256

datagen:
  raw: false
  normalize: true
  transpose: true
  balance: true
  ltoi: true
  stratify: true

train:
  script_path: ${root_path}/train/prototypical_train.py
  artifacts_path: ${root_path}/datasets/artifacts 
  sampler: activequery
  num_classes: 15
  n_shot: 5
  n_query: 5
  k_way : 10
  lr: 0.0001
  scheduler_gamma: 0.5
  scheduler_step_size: 10
  epochs: 15

eval:
  #Makes sense since ppl didnt have acces to evaluation annotations. :)
  #Think/Talk about doing this differently? Doesn't really mattter though.
  use_fraction_neg: true
  use_fraction_pos: true
  dataset: VAL
  script_path: ${root_path}/eval/prototypical_eval.py
  samples_neg: -1 #Introduce number for 'all', ex -1
  fraction_neg: 1
  samples_pos: -1
  fraction_pos: 1
  iterations: 10
  query_batch_size: 200
  negative_set_batch_size: 200
  positive_set_batch_size: 20
  p_thresh: 0.5
